{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavmurarka/Desktop/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isGuestMode, setIsGuestMode] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    const guestMode = localStorage.getItem('guestMode');\n    if (guestMode === 'true') {\n      setIsGuestMode(true);\n      setUser({\n        id: -1,\n        email: 'guest@example.com',\n        full_name: 'Guest User'\n      });\n    } else if (token && storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Error parsing stored user:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login(email, password);\n      const {\n        access_token,\n        user: userData\n      } = response;\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async (email, password, full_name) => {\n    try {\n      const response = await authAPI.register(email, password, full_name);\n      const {\n        access_token,\n        user: userData\n      } = response;\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const enterGuestMode = () => {\n    localStorage.setItem('guestMode', 'true');\n    setIsGuestMode(true);\n    setUser({\n      id: -1,\n      email: 'guest@example.com',\n      full_name: 'Guest User'\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('guestMode');\n    // Clear all guest data\n    localStorage.removeItem('guestDocuments');\n    localStorage.removeItem('guestChatHistory');\n    setUser(null);\n    setIsGuestMode(false);\n  };\n  const value = {\n    user,\n    isGuestMode,\n    login,\n    register,\n    enterGuestMode,\n    logout,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"kj2cFByeT0lrZIB4/0sCu0xhg1I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isGuestMode","setIsGuestMode","isLoading","setIsLoading","token","localStorage","getItem","storedUser","guestMode","id","email","full_name","JSON","parse","error","console","removeItem","login","password","response","access_token","userData","setItem","stringify","register","enterGuestMode","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vaibhavmurarka/Desktop/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, authAPI } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  isGuestMode: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string, full_name: string) => Promise<void>;\n  enterGuestMode: () => void;\n  logout: () => void;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isGuestMode, setIsGuestMode] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    const guestMode = localStorage.getItem('guestMode');\n    \n    if (guestMode === 'true') {\n      setIsGuestMode(true);\n      setUser({\n        id: -1,\n        email: 'guest@example.com',\n        full_name: 'Guest User'\n      });\n    } else if (token && storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Error parsing stored user:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string): Promise<void> => {\n    try {\n      const response = await authAPI.login(email, password);\n      const { access_token, user: userData } = response;\n      \n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const register = async (email: string, password: string, full_name: string): Promise<void> => {\n    try {\n      const response = await authAPI.register(email, password, full_name);\n      const { access_token, user: userData } = response;\n      \n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n\n  const enterGuestMode = (): void => {\n    localStorage.setItem('guestMode', 'true');\n    setIsGuestMode(true);\n    setUser({\n      id: -1,\n      email: 'guest@example.com',\n      full_name: 'Guest User'\n    });\n  };\n\n  const logout = (): void => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('guestMode');\n    // Clear all guest data\n    localStorage.removeItem('guestDocuments');\n    localStorage.removeItem('guestChatHistory');\n    setUser(null);\n    setIsGuestMode(false);\n  };\n\n  const value: AuthContextType = {\n    user,\n    isGuestMode,\n    login,\n    register,\n    enterGuestMode,\n    logout,\n    isLoading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,SAAeC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYhD,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAuB;EAAAC,EAAA;EAC5C,MAAMC,OAAO,GAAGV,UAAU,CAACM,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAME,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAEnD,IAAIE,SAAS,KAAK,MAAM,EAAE;MACxBP,cAAc,CAAC,IAAI,CAAC;MACpBF,OAAO,CAAC;QACNU,EAAE,EAAE,CAAC,CAAC;QACNC,KAAK,EAAE,mBAAmB;QAC1BC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIP,KAAK,IAAIG,UAAU,EAAE;MAC9B,IAAI;QACFR,OAAO,CAACa,IAAI,CAACC,KAAK,CAACN,UAAU,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDT,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;QAChCX,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;IACAb,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,KAAK,GAAG,MAAAA,CAAOP,KAAa,EAAEQ,QAAgB,KAAoB;IACtE,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjC,OAAO,CAAC+B,KAAK,CAACP,KAAK,EAAEQ,QAAQ,CAAC;MACrD,MAAM;QAAEE,YAAY;QAAEtB,IAAI,EAAEuB;MAAS,CAAC,GAAGF,QAAQ;MAEjDd,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAEF,YAAY,CAAC;MAC3Cf,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACF,QAAQ,CAAC,CAAC;MACtDtB,OAAO,CAACsB,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMU,QAAQ,GAAG,MAAAA,CAAOd,KAAa,EAAEQ,QAAgB,EAAEP,SAAiB,KAAoB;IAC5F,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMjC,OAAO,CAACsC,QAAQ,CAACd,KAAK,EAAEQ,QAAQ,EAAEP,SAAS,CAAC;MACnE,MAAM;QAAES,YAAY;QAAEtB,IAAI,EAAEuB;MAAS,CAAC,GAAGF,QAAQ;MAEjDd,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAEF,YAAY,CAAC;MAC3Cf,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACF,QAAQ,CAAC,CAAC;MACtDtB,OAAO,CAACsB,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMW,cAAc,GAAGA,CAAA,KAAY;IACjCpB,YAAY,CAACiB,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;IACzCrB,cAAc,CAAC,IAAI,CAAC;IACpBF,OAAO,CAAC;MACNU,EAAE,EAAE,CAAC,CAAC;MACNC,KAAK,EAAE,mBAAmB;MAC1BC,SAAS,EAAE;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMe,MAAM,GAAGA,CAAA,KAAY;IACzBrB,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCX,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;IAC/BX,YAAY,CAACW,UAAU,CAAC,WAAW,CAAC;IACpC;IACAX,YAAY,CAACW,UAAU,CAAC,gBAAgB,CAAC;IACzCX,YAAY,CAACW,UAAU,CAAC,kBAAkB,CAAC;IAC3CjB,OAAO,CAAC,IAAI,CAAC;IACbE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAM0B,KAAsB,GAAG;IAC7B7B,IAAI;IACJE,WAAW;IACXiB,KAAK;IACLO,QAAQ;IACRC,cAAc;IACdC,MAAM;IACNxB;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACuC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA/B,QAAA,EAChCA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnC,GAAA,CA7FWF,YAAyC;AAAAsC,EAAA,GAAzCtC,YAAyC;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}